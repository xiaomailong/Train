#+TITLE:     Contrôle de système ferroviaire
#+AUTHOR:    Baptiste Fouques
#+EMAIL:     bateast@bat.fr.eu.org
#+DATE:      2013-01-10 jeu.
#+OPTIONS:   H:5 num:t toc:nil \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t

* Structure du code

** Unités et grandeurs

   - Length :: une longueur, positive, en mètre, précision au millimètre
   - Abscissa :: un index de position  relative, positive ou négative, en mètre,
                 précision au millimètre

** Objets

   - Segment  :: élément  linéaire orienté  de  voie, permettant  de définir  un
                repère curviligne.
     - il n'existe pas d'aiguille dans un segment
     - les orientations  sont définie  par /vers  une extrémité/,  une extrémité
       étant :
       - /Incrementing/ tel que les abscisses croissent vers cette extrémité
       - /Decrementing/ tel que les abscisses décroissent vers cette extrémité
   - Location :: endroit sur la voie, pouvant s'exprimer comme une abscisse dans
                 le repère d'un segment arbitraire
   - Switch :: une /aiguille/, un élément permettant de passer d'un segment à un
               autre suivant la position courante de l'aiguille.
     - une aiguille possède un nombre arbitraire de positions
     - une position  relie deux  extrémités de segment,  qui peuvent  se suivre,
       être en /face à face/, ou être /dos à dos/
     - une  aiguille est  à  un instant  soit /Unset/,  soit  dans une  position
       reliant deux extrémités de segment
   - Track  ::  une voie,  un  ensemble  de  segments  et d'aiguilles  dont  les
              positions relient les segments.
     - une  extrémité de  segment  ne peut  être liée  qu'à  une position  d'une
       aiguille
     - un segment ou un groupe de segment peuvent être isolés

** Fonctions

   - \*.Create ::  tous les instances  objets sont  crées avec cette  fonction
   - Track.Add_\* :: Ajouté un élément à la voie.
     - Track.Add_Link permet de  créer le lien entre deux  extrémités de segment
       par une aiguille déjà ajoutée et pour une position donnée
   - Location.Abscissa   ::  récupère  l'abscisse  d'une position  sur la  voie,
        relativement à son segment de référence,  ou d'un segment lié suivant la
        position des aiguilles
        - déclenche   =No_Link_With_Segment=   si    la   position   n'est   pas
          représentable dans relativement au segment
   - Location.equal   ::   deux   positions   équivalentes   (abscisses   égales
                       relativement au même segment)
   - Switch.[Un]set :: détermine la position dynamique d'une aiguille
   - Track.Next   ::   désigne l'extrémité  de  prochain  segment dans  la  même
                     orientation que celle fournie
                   - déclenche =No_Next_Segment= s'il n'y a pas de segment lié à
                     cette extrémité

   #+Caption: Incrementing and decrementing, Next operation.
   #+BEGIN_SRC ditaa :file img/next.png
      *------->*------->*<-------*
          A        B         C
   #+END_SRC

   #+RESULTS:
   [[file:img/next.png]]

   /Next/ (B, /Incrementing/)  est C /Decrementing/,  /Next/ (B, /Decrementing/)
   est A /Decrementing/.
** Tests

*** =Test_Track::Eyebrown=

    Création d'une voie avec un chapeau de gendarme au dessus d'un segment nommé
    /Main_Segment/.

    Le chapeau  de gendarme est  symétrique avec  chaque bord d'une  longueur de
    5 m, le segment de base de 15 m, et le segment du dessus de 25 m.

    Pour tester les retournement d'orientation, le segment du dessus est orienté
    à l'inverse des autres segments.

    Trois points sont placés sur la voie :
    - L1 :: sur le bord amont, à l'abscisse 1 m
    - L2 :: sur le bord aval, à l'abscisse 3 m
    - L3 :: sur le segment supérieur, à l'abscisse 10 m

    #+caption: Plan de /Test_Track::Eyebrown/
    #+BEGIN_SRC ditaa :file img/eyebrown.png
                                            L3
                   /-------------------------*-----\
                   |        15m                 10m|
        L1         v                               |     L2
      ,*--*-------->*------------------------------>*------*---->
        1m    4m                   15m                 3m   2m

    #+END_SRC

    #+RESULTS:
    [[file:img/eyebrown.png]]

    Le calcul  des distances signées  entre les  points suivant la  position des
    aiguilles permet de vérifier le bon  chaînage des segments, et le calcul des
    abscisses relativement à un segment arbitraire.

    - L2 - L1 par le bas :: 22 m
    - L2 - L1 par le haut :: 32 m
    - L3 - L1 :: 19 m
    - L2 - L3 :: - ((/L2 - L1/) - (/L3 - L1/))                                \\
      la négation vient du référentiel de /L3/ sur lequel on fait le calcul
